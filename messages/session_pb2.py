# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: session.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rsession.proto\"=\n\x07Invoice\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x0f\n\x07invoice\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x05\"5\n\x07Receipt\x12\x19\n\x07invoice\x18\x01 \x01(\x0b\x32\x08.Invoice\x12\x0f\n\x07receipt\x18\x02 \x01(\t\"S\n\x05Image\x12\r\n\x05width\x18\x01 \x01(\x05\x12\r\n\x05heigh\x18\x02 \x01(\x05\x12\x10\n\x08\x63hannels\x18\x03 \x01(\x05\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x05 \x01(\x0c\"\xf0\x01\n\x05Swarm\x12\x13\n\x0bmerkle_root\x18\x01 \x01(\t\x12\x10\n\x08\x66ilename\x18\x02 \x01(\t\x12\x10\n\x08\x66ilepath\x18\x03 \x01(\t\x12\x10\n\x08\x66ilesize\x18\x04 \x01(\x05\x12\x11\n\tchunksize\x18\x05 \x01(\x05\x12\x14\n\x0ctotal_chunks\x18\x06 \x01(\x05\x12\x16\n\x06\x63hunks\x18\x07 \x03(\x0b\x32\x06.Chunk\x12\x13\n\x0b\x63hunk_price\x18\x08 \x01(\x05\x12\x16\n\x06poster\x18\t \x01(\x0b\x32\x06.Image\x12\x13\n\x0btotal_price\x18\n \x01(\x05\x12\x19\n\x07invoice\x18\x0b \x01(\x0b\x32\x08.Invoice\"N\n\x05\x43hunk\x12\x10\n\x08\x63hunk_id\x18\x01 \x01(\t\x12\x11\n\tchunk_seq\x18\x02 \x01(\x05\x12\x12\n\nchunk_data\x18\x03 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\"\x1c\n\x08Macaroon\x12\x10\n\x08macaroon\x18\x01 \x01(\t\"N\n\x04Peer\x12\x0f\n\x07peer_id\x18\x01 \x01(\t\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x1b\n\x08macaroon\x18\x04 \x01(\x0b\x32\t.Macaroon\"=\n\x0c\x41skHandshake\x12\x1a\n\x0b\x63lient_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x11\n\thandshake\x18\x02 \x01(\t\"I\n\x11HandshakeResponse\x12\x1a\n\x0bserver_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x18\n\x10handshake_status\x18\x02 \x01(\t\"&\n\x08\x41skMedia\x12\x1a\n\x0b\x63lient_peer\x18\x01 \x01(\x0b\x32\x05.Peer\"B\n\x0cMediaRespose\x12\x1a\n\x0bserver_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x16\n\x06swarms\x18\x02 \x03(\x0b\x32\x06.Swarm\"V\n\x08\x41skSwarm\x12\x1a\n\x0b\x63lient_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x13\n\x0bmerkle_root\x18\x02 \x01(\t\x12\x19\n\x07receipt\x18\x03 \x01(\x0b\x32\x08.Receipt\"\x86\x01\n\rChunkResponse\x12\x1a\n\x0bserver_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x10\n\x08swarm_id\x18\x02 \x01(\t\x12\x15\n\x05\x63hunk\x18\x03 \x01(\x0b\x32\x06.Chunk\x12\x19\n\x07invoice\x18\x04 \x01(\x0b\x32\x08.Invoice\x12\x15\n\rnext_chunk_id\x18\x05 \x01(\t\"Z\n\x0f\x41skChunkPayment\x12\x1a\n\x0b\x63lient_peer\x18\x01 \x01(\x0b\x32\x05.Peer\x12\x10\n\x08\x63hunk_id\x18\x02 \x01(\t\x12\x19\n\x07receipt\x18\x04 \x01(\x0b\x32\x08.Receipt2>\n\nHandshaker\x12\x30\n\thandshake\x12\r.AskHandshake\x1a\x12.HandshakeResponse\"\x00\x32\x32\n\tCatalogue\x12%\n\x07looking\x12\t.AskMedia\x1a\r.MediaRespose\"\x00\x32\x39\n\x0bStartStream\x12*\n\x0bstartstream\x12\t.AskSwarm\x1a\x0e.ChunkResponse\"\x00\x32\x41\n\rSendStreaming\x12\x30\n\nsend_chunk\x12\x10.AskChunkPayment\x1a\x0e.ChunkResponse\"\x00\x32?\n\x0cGetStreaming\x12/\n\tpay_chunk\x12\x0e.ChunkResponse\x1a\x10.AskChunkPayment\"\x00\x62\x06proto3')



_INVOICE = DESCRIPTOR.message_types_by_name['Invoice']
_RECEIPT = DESCRIPTOR.message_types_by_name['Receipt']
_IMAGE = DESCRIPTOR.message_types_by_name['Image']
_SWARM = DESCRIPTOR.message_types_by_name['Swarm']
_CHUNK = DESCRIPTOR.message_types_by_name['Chunk']
_MACAROON = DESCRIPTOR.message_types_by_name['Macaroon']
_PEER = DESCRIPTOR.message_types_by_name['Peer']
_ASKHANDSHAKE = DESCRIPTOR.message_types_by_name['AskHandshake']
_HANDSHAKERESPONSE = DESCRIPTOR.message_types_by_name['HandshakeResponse']
_ASKMEDIA = DESCRIPTOR.message_types_by_name['AskMedia']
_MEDIARESPOSE = DESCRIPTOR.message_types_by_name['MediaRespose']
_ASKSWARM = DESCRIPTOR.message_types_by_name['AskSwarm']
_CHUNKRESPONSE = DESCRIPTOR.message_types_by_name['ChunkResponse']
_ASKCHUNKPAYMENT = DESCRIPTOR.message_types_by_name['AskChunkPayment']
Invoice = _reflection.GeneratedProtocolMessageType('Invoice', (_message.Message,), {
  'DESCRIPTOR' : _INVOICE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Invoice)
  })
_sym_db.RegisterMessage(Invoice)

Receipt = _reflection.GeneratedProtocolMessageType('Receipt', (_message.Message,), {
  'DESCRIPTOR' : _RECEIPT,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Receipt)
  })
_sym_db.RegisterMessage(Receipt)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), {
  'DESCRIPTOR' : _IMAGE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Image)
  })
_sym_db.RegisterMessage(Image)

Swarm = _reflection.GeneratedProtocolMessageType('Swarm', (_message.Message,), {
  'DESCRIPTOR' : _SWARM,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Swarm)
  })
_sym_db.RegisterMessage(Swarm)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), {
  'DESCRIPTOR' : _CHUNK,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Chunk)
  })
_sym_db.RegisterMessage(Chunk)

Macaroon = _reflection.GeneratedProtocolMessageType('Macaroon', (_message.Message,), {
  'DESCRIPTOR' : _MACAROON,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Macaroon)
  })
_sym_db.RegisterMessage(Macaroon)

Peer = _reflection.GeneratedProtocolMessageType('Peer', (_message.Message,), {
  'DESCRIPTOR' : _PEER,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:Peer)
  })
_sym_db.RegisterMessage(Peer)

AskHandshake = _reflection.GeneratedProtocolMessageType('AskHandshake', (_message.Message,), {
  'DESCRIPTOR' : _ASKHANDSHAKE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:AskHandshake)
  })
_sym_db.RegisterMessage(AskHandshake)

HandshakeResponse = _reflection.GeneratedProtocolMessageType('HandshakeResponse', (_message.Message,), {
  'DESCRIPTOR' : _HANDSHAKERESPONSE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:HandshakeResponse)
  })
_sym_db.RegisterMessage(HandshakeResponse)

AskMedia = _reflection.GeneratedProtocolMessageType('AskMedia', (_message.Message,), {
  'DESCRIPTOR' : _ASKMEDIA,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:AskMedia)
  })
_sym_db.RegisterMessage(AskMedia)

MediaRespose = _reflection.GeneratedProtocolMessageType('MediaRespose', (_message.Message,), {
  'DESCRIPTOR' : _MEDIARESPOSE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:MediaRespose)
  })
_sym_db.RegisterMessage(MediaRespose)

AskSwarm = _reflection.GeneratedProtocolMessageType('AskSwarm', (_message.Message,), {
  'DESCRIPTOR' : _ASKSWARM,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:AskSwarm)
  })
_sym_db.RegisterMessage(AskSwarm)

ChunkResponse = _reflection.GeneratedProtocolMessageType('ChunkResponse', (_message.Message,), {
  'DESCRIPTOR' : _CHUNKRESPONSE,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:ChunkResponse)
  })
_sym_db.RegisterMessage(ChunkResponse)

AskChunkPayment = _reflection.GeneratedProtocolMessageType('AskChunkPayment', (_message.Message,), {
  'DESCRIPTOR' : _ASKCHUNKPAYMENT,
  '__module__' : 'session_pb2'
  # @@protoc_insertion_point(class_scope:AskChunkPayment)
  })
_sym_db.RegisterMessage(AskChunkPayment)

_HANDSHAKER = DESCRIPTOR.services_by_name['Handshaker']
_CATALOGUE = DESCRIPTOR.services_by_name['Catalogue']
_STARTSTREAM = DESCRIPTOR.services_by_name['StartStream']
_SENDSTREAMING = DESCRIPTOR.services_by_name['SendStreaming']
_GETSTREAMING = DESCRIPTOR.services_by_name['GetStreaming']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _INVOICE._serialized_start=17
  _INVOICE._serialized_end=78
  _RECEIPT._serialized_start=80
  _RECEIPT._serialized_end=133
  _IMAGE._serialized_start=135
  _IMAGE._serialized_end=218
  _SWARM._serialized_start=221
  _SWARM._serialized_end=461
  _CHUNK._serialized_start=463
  _CHUNK._serialized_end=541
  _MACAROON._serialized_start=543
  _MACAROON._serialized_end=571
  _PEER._serialized_start=573
  _PEER._serialized_end=651
  _ASKHANDSHAKE._serialized_start=653
  _ASKHANDSHAKE._serialized_end=714
  _HANDSHAKERESPONSE._serialized_start=716
  _HANDSHAKERESPONSE._serialized_end=789
  _ASKMEDIA._serialized_start=791
  _ASKMEDIA._serialized_end=829
  _MEDIARESPOSE._serialized_start=831
  _MEDIARESPOSE._serialized_end=897
  _ASKSWARM._serialized_start=899
  _ASKSWARM._serialized_end=985
  _CHUNKRESPONSE._serialized_start=988
  _CHUNKRESPONSE._serialized_end=1122
  _ASKCHUNKPAYMENT._serialized_start=1124
  _ASKCHUNKPAYMENT._serialized_end=1214
  _HANDSHAKER._serialized_start=1216
  _HANDSHAKER._serialized_end=1278
  _CATALOGUE._serialized_start=1280
  _CATALOGUE._serialized_end=1330
  _STARTSTREAM._serialized_start=1332
  _STARTSTREAM._serialized_end=1389
  _SENDSTREAMING._serialized_start=1391
  _SENDSTREAMING._serialized_end=1456
  _GETSTREAMING._serialized_start=1458
  _GETSTREAMING._serialized_end=1521
# @@protoc_insertion_point(module_scope)
